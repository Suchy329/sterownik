Arduino Mega 2560 + Ethernet Shield z karta uSD
Zasilony z zasilacza 5-9VDC
Podpięty kabelkiem USB (typ A-typ B tzw. drukarkowy) z RPi  (opcjonalne - programowanie i komunikacja z python/www)

Lista połączeń:

modul zegara RTC (OBOWIAZKOWY)
arduino - moduł modul zegara RTC z ukladem DS1307
+5V     - VCC
20      - SDA
21      - SCL
GND     - GND

wyswietlacz LCD alfanumeryczny 2x16 (4x20 tez dziala)
arduino - konwerter I2C-LCD
+5V     - VCC
20      - SDA
21      - SCL
GND     - GND

komunikacja z bruli/ecoal (opcjonalna):
arduino - moduł RS232-TTL (szukać moduł z ukladem MAX3232 i gniazdem DB9)
+5V     - VCC
18      - TXD
19      - RXD
GND     - GND

kabelek RS232 - null modem oba gniazda meskie (oryginalny przewód do programowania to tylko przedluzacz 1:1):
DB9M    - DB9M
5       - 5
3       - 2
2       - 3

czujnik spalin (opcjonalny):
arduino - moduł z MAX31855K + termopara typ K !!!! UWAGA nie mozna podpinac pod 5V !!!
+3.3V   - VCC
GND     - GND
50      - DO/SO
52      - CLK/SCK
48      - CS

czujnik spalin (opcjonalny):
arduino - moduł z MAX6675K + termopara typ K
+5V     - VCC
GND     - GND
50      - DO/SO
52      - CLK/SCK
49      - CS

czujnik poziomu zasobnika (opcjonalny):
w pole R27 modulu wlutowac rezystor 47k
arduino - moduł z JSN-SR04T-2.0
+5V     - VCC
GND     - GND
RX2     - TX

czujniki DS18xx:
arduino - czujniki
22      - DATA
+5V     - VCC
GND     - GND
pin 22 podciagnac rezystorem 4k7 lub lepiej 3k3 do +5V, w przypadku problemow z komunikacja 
(dlugi przewod, >5 czujnikow) mozna zmniejszac go kolejno na 2k7,2k,1.5k,1k az do uzyskania poprawnej komunikacji
23      - aktywne podciagniecie (schemat w dokumentacja/pics/1wire-aktywne_podciagniecie)

czujnik KTY81-210:
+5V----[2k7]----Analog----[KTY81/210]----GND

czujnik pozycji tloka w podajniku tlokowym (sygnał 5V - tlok pracuje, 0V - tlok na pozycji startowej)
arduino - czujnik
+5V     - VCC
6       - sygnał z czujnika
GND     - GND

modul enkodera:
arduino - enkoder
+5V     - VCC
GND     - GND
14      - DT
15      - CLK
34      - SW/BTN
35      - wybor typu enkodera (zworka do GND zmienia typ - jesli przeskakuje o 2 pozycje)

moduł przekaźników (do arduino) lub triaków (AVT1679):
arduino - moduł
A15     - pompa CWU1 (CWU bruli/ecoal)
A14     - pompa CWU2 (CWU dodatkowe)
A13     - dmuchawa AC (sterowanie triakiem MOC3020)
A12     - 4D zamykanie
A11     - 4D otwieranie
A10     - podajnik
A9      - pompa CO
A8      - pompa CYRKULACJI
A6      - pomiar pradu podajnika
13      - Heartbeat (wolno brak polaczenia rs232, szybko - polaczenie OK)
...
24      - podajnik [sygnał odwrócony - stan aktywny niski (0VDC)]
25      - pompa CO [sygnał odwrócony]
26      - pompa CWU1 [sygnał odwrócony]
27      - pompa CWU2 [sygnał odwrócony]
28      - pompa CYRKULACJI [sygnał odwrócony]
29      - 4D zamykanie [sygnał odwrócony]
30      - 4D otwieranie [sygnał odwrócony]
31      - alarm - buzzer
32      - dmuchawa AC (sterowanie triakiem MOC3020)
33      - dmuchawa AC (modul low level trigger z G3MB-202PL) [sygnał odwrócony]
36      - wejscie styku bezpotencjalowego (zwierajacego do GND) termostatu pokojowego
...
GND     - GND

wentylator DC z wejsciem PWM:
arduino - moduł
7       - wejscie PWM wentylatora
8       - zalaczenie wentylatora (odcinanie zasilania przekaznikiem) [sygnał odwrócony]
+12V    - czerowny przewod
GND     - czarny przewod
koniecznie pin 7 - podciągnąć przez rezystor 4k7 ohm do +5V lub GND w zaleznosci od dmuchawy
zasilacz 12V 1.5A wystarcza do takiej dmuchawy

wentylator AC:
w AVT1679 wymienic jeden optotriak (biały/kremowy element) na MOC 3020,3021 lub 3022
lub zmontowac sobie na płytce uniwersalnej 1 kanał podobny do tego w module z optotriakiem podanym wyzej

detektor przejścia przez 0 sieci (wymagany tylko dla dmuchawy AC):
arduino - moduł
+5V     - +5V
2       - sygnał
GND     - GND
(schemat w dokumentacja/pics/detektor)

UWAGA!
Z czasem rozwoju sterownika podłączenia (piny) mogą ulec zmianie ...